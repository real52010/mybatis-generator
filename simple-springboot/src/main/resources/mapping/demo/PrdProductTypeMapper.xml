<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.real.demo.mapper.PrdProductTypeMapper">
  <resultMap id="BaseResultMap" type="com.real.demo.domain.PrdProductType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="product_type_id" jdbcType="VARCHAR" property="productTypeId" />
    <result column="product_type_name" jdbcType="VARCHAR" property="productTypeName" />
    <result column="product_property_id" jdbcType="VARCHAR" property="productPropertyId" />
    <result column="qualification_authenticate" jdbcType="SMALLINT" property="qualificationAuthenticate" />
    <result column="risk_assessment" jdbcType="SMALLINT" property="riskAssessment" />
    <result column="available" jdbcType="SMALLINT" property="available" />
    <result column="order_num" jdbcType="SMALLINT" property="orderNum" />
    <result column="deleted" jdbcType="SMALLINT" property="deleted" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <if test="example != null">
      <where>
        <foreach collection="example.oredCriteria" item="criteria" separator="or">
          <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
              <foreach collection="criteria.criteria" item="criterion">
                <choose>
                  <when test="criterion.noValue">
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue">
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue">
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue">
                    and ${criterion.condition}
                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </where>
    </if>
  </sql>
  <sql id="Example_OrderBy_Clause">
    <if test="example!=null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </sql>
  <sql id="Example_Pagin_Clause">
    <if test="example!=null and example.paginLimit != null">
      <if test="example.paginOffset != null">
        limit ${example.paginOffset}, ${example.paginLimit}
      </if>
      <if test="example.paginOffset == null">
        limit ${example.paginLimit}
      </if>
    </if>
  </sql>
  <sql id="Base_Column_List">
    productType.id, productType.product_type_id, productType.product_type_name, productType.product_property_id, 
    productType.qualification_authenticate, productType.risk_assessment, productType.available, 
    productType.order_num, productType.deleted, productType.create_by, productType.create_time, 
    productType.update_by, productType.update_time, productType.remark
  </sql>
  <sql id="Base_Insert_Column_List">
    insert into prd_product_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="record.productTypeId != null">
        product_type_id,
      </if>
      <if test="record.productTypeName != null">
        product_type_name,
      </if>
      <if test="record.productPropertyId != null">
        product_property_id,
      </if>
      <if test="record.qualificationAuthenticate != null">
        qualification_authenticate,
      </if>
      <if test="record.riskAssessment != null">
        risk_assessment,
      </if>
      <if test="record.available != null">
        available,
      </if>
      <if test="record.orderNum != null">
        order_num,
      </if>
      <if test="record.deleted != null">
        deleted,
      </if>
      <if test="record.createBy != null">
        create_by,
      </if>
      <if test="record.createTime != null">
        create_time,
      </if>
      <if test="record.updateBy != null">
        update_by,
      </if>
      <if test="record.updateTime != null">
        update_time,
      </if>
      <if test="record.remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="record.productTypeId != null">
        #{record.productTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.productTypeName != null">
        #{record.productTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.productPropertyId != null">
        #{record.productPropertyId,jdbcType=VARCHAR},
      </if>
      <if test="record.qualificationAuthenticate != null">
        #{record.qualificationAuthenticate,jdbcType=SMALLINT},
      </if>
      <if test="record.riskAssessment != null">
        #{record.riskAssessment,jdbcType=SMALLINT},
      </if>
      <if test="record.available != null">
        #{record.available,jdbcType=SMALLINT},
      </if>
      <if test="record.orderNum != null">
        #{record.orderNum,jdbcType=SMALLINT},
      </if>
      <if test="record.deleted != null">
        #{record.deleted,jdbcType=SMALLINT},
      </if>
      <if test="record.createBy != null">
        #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        #{record.remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </sql>
  <sql id="Base_Update_Column_List">
    update prd_product_type productType
    <set>
      <if test="record.productTypeId != null">
        productType.product_type_id = #{record.productTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.productTypeName != null">
        productType.product_type_name = #{record.productTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.productPropertyId != null">
        productType.product_property_id = #{record.productPropertyId,jdbcType=VARCHAR},
      </if>
      <if test="record.qualificationAuthenticate != null">
        productType.qualification_authenticate = #{record.qualificationAuthenticate,jdbcType=SMALLINT},
      </if>
      <if test="record.riskAssessment != null">
        productType.risk_assessment = #{record.riskAssessment,jdbcType=SMALLINT},
      </if>
      <if test="record.available != null">
        productType.available = #{record.available,jdbcType=SMALLINT},
      </if>
      <if test="record.orderNum != null">
        productType.order_num = #{record.orderNum,jdbcType=SMALLINT},
      </if>
      <if test="record.deleted != null">
        productType.deleted = #{record.deleted,jdbcType=SMALLINT},
      </if>
      <if test="record.createBy != null">
        productType.create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        productType.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        productType.update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        productType.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        productType.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
  </sql>
  <insert id="insert" keyColumn="id" keyProperty="record.id" parameterType="com.real.demo.domain.PrdProductType" useGeneratedKeys="true">
    <include refid="Base_Insert_Column_List" />
  </insert>
  <insert id="insertBatch" keyColumn="id" keyProperty="id" parameterType="java.util.List" useGeneratedKeys="true">
    <foreach collection="list" index="index" item="record" open="" separator="separator">
      <include refid="Base_Insert_Column_List" />
    </foreach>
  </insert>
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from prd_product_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.real.demo.common.base.mybatis.Example">
    delete from prd_product_type productType
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="_parameter == null">
        where 1=2 
    </if>
  </delete>
  <update id="updateById" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByExample" parameterType="map">
    <include refid="Base_Update_Column_List" />
    <include refid="Example_Where_Clause" />
    <if test="_parameter == null">
        where 1=2 
    </if>
  </update>
  <update id="updateBySelective" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateBatchBySelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="record" open="" separator="separator">
      <include refid="Base_Update_Column_List" />
      where id = #{record.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <select id="getById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prd_product_type productType
    where productType.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByExample" parameterType="com.real.demo.common.base.mybatis.Example" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prd_product_type productType
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <include refid="Example_OrderBy_Clause" />
    <include refid="Example_Pagin_Clause" />
  </select>
  <select id="countByExample" parameterType="com.real.demo.common.base.mybatis.Example" resultType="java.lang.Integer">
    select count(*) from prd_product_type productType
    <include refid="Example_Where_Clause" />
  </select>
  <update id="vDeleteByExample" parameterType="com.real.demo.common.base.mybatis.Example">
    update prd_product_type productType set deleted=1 
    <include refid="Example_Where_Clause" />
    <if test="_parameter == null">
        where 1=2 
    </if>
  </update>
  <update id="vDeleteById" parameterType="java.lang.Integer">
    update prd_product_type productType set deleted=1 
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>