<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huilian.mapper.AmountchangerecordDAO">
  <resultMap id="BaseResultMap" type="com.huilian.model.Amountchangerecord">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="TransactionID" jdbcType="VARCHAR" property="transactionid" />
    <result column="Type" jdbcType="VARCHAR" property="type" />
    <result column="Status" jdbcType="VARCHAR" property="status" />
    <result column="ChangeAmount" jdbcType="DECIMAL" property="changeamount" />
    <result column="Amount" jdbcType="DECIMAL" property="amount" />
    <result column="CreateTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="UserID" jdbcType="VARCHAR" property="userid" />
    <result column="Remark" jdbcType="VARCHAR" property="remark" />
    <result column="BankCard" jdbcType="VARCHAR" property="bankcard" />
    <result column="BankCode" jdbcType="VARCHAR" property="bankcode" />
    <result column="ProductId" jdbcType="VARCHAR" property="productid" />
    <result column="PurchaseRecordId" jdbcType="VARCHAR" property="purchaserecordid" />
    <result column="data_source" jdbcType="SMALLINT" property="dataSource" />
    <result column="data_status" jdbcType="BIT" property="dataStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Example_OrderBy_Clause">
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </sql>
  <sql id="Example_Pagin_Clause">
    <if test="example.paginLimit != null">
      <if test="model.paginOffset != null">
        limit ${model.paginOffset}, ${model.paginLimit}
      </if>
      <if test="model.paginOffset == null">
        limit ${model.paginLimit}
      </if>
    </if>
  </sql>
  <sql id="Base_Column_List">
    ID, TransactionID, Type, Status, ChangeAmount, Amount, CreateTime, UserID, Remark, 
    BankCard, BankCode, ProductId, PurchaseRecordId, data_source, data_status
  </sql>
  <sql id="Base_Insert_Column_List">
    insert into amountchangerecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transactionid != null and record.transactionid != ''">
        TransactionID,
      </if>
      <if test="type != null and record.type != ''">
        Type,
      </if>
      <if test="status != null and record.status != ''">
        Status,
      </if>
      <if test="changeamount != null and record.changeamount != ''">
        ChangeAmount,
      </if>
      <if test="amount != null and record.amount != ''">
        Amount,
      </if>
      <if test="createtime != null and record.createtime != ''">
        CreateTime,
      </if>
      <if test="userid != null and record.userid != ''">
        UserID,
      </if>
      <if test="remark != null and record.remark != ''">
        Remark,
      </if>
      <if test="bankcard != null and record.bankcard != ''">
        BankCard,
      </if>
      <if test="bankcode != null and record.bankcode != ''">
        BankCode,
      </if>
      <if test="productid != null and record.productid != ''">
        ProductId,
      </if>
      <if test="purchaserecordid != null and record.purchaserecordid != ''">
        PurchaseRecordId,
      </if>
      <if test="dataSource != null and record.dataSource != ''">
        data_source,
      </if>
      <if test="dataStatus != null and record.dataStatus != ''">
        data_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transactionid != null and record.transactionid != ''">
        #{transactionid,jdbcType=VARCHAR},
      </if>
      <if test="type != null and record.type != ''">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null and record.status != ''">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="changeamount != null and record.changeamount != ''">
        #{changeamount,jdbcType=DECIMAL},
      </if>
      <if test="amount != null and record.amount != ''">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null and record.createtime != ''">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null and record.userid != ''">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="remark != null and record.remark != ''">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="bankcard != null and record.bankcard != ''">
        #{bankcard,jdbcType=VARCHAR},
      </if>
      <if test="bankcode != null and record.bankcode != ''">
        #{bankcode,jdbcType=VARCHAR},
      </if>
      <if test="productid != null and record.productid != ''">
        #{productid,jdbcType=VARCHAR},
      </if>
      <if test="purchaserecordid != null and record.purchaserecordid != ''">
        #{purchaserecordid,jdbcType=VARCHAR},
      </if>
      <if test="dataSource != null and record.dataSource != ''">
        #{dataSource,jdbcType=SMALLINT},
      </if>
      <if test="dataStatus != null and record.dataStatus != ''">
        #{dataStatus,jdbcType=BIT},
      </if>
    </trim>
  </sql>
  <sql id="Base_Update_Column_List">
    update amountchangerecord
    <set>
      <if test="record.transactionid != null and record.transactionid != ''">
        TransactionID = #{record.transactionid,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null and record.type != ''">
        Type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null and record.status != ''">
        Status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.changeamount != null and record.changeamount != ''">
        ChangeAmount = #{record.changeamount,jdbcType=DECIMAL},
      </if>
      <if test="record.amount != null and record.amount != ''">
        Amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.createtime != null and record.createtime != ''">
        CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userid != null and record.userid != ''">
        UserID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null and record.remark != ''">
        Remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.bankcard != null and record.bankcard != ''">
        BankCard = #{record.bankcard,jdbcType=VARCHAR},
      </if>
      <if test="record.bankcode != null and record.bankcode != ''">
        BankCode = #{record.bankcode,jdbcType=VARCHAR},
      </if>
      <if test="record.productid != null and record.productid != ''">
        ProductId = #{record.productid,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaserecordid != null and record.purchaserecordid != ''">
        PurchaseRecordId = #{record.purchaserecordid,jdbcType=VARCHAR},
      </if>
      <if test="record.dataSource != null and record.dataSource != ''">
        data_source = #{record.dataSource,jdbcType=SMALLINT},
      </if>
      <if test="record.dataStatus != null and record.dataStatus != ''">
        data_status = #{record.dataStatus,jdbcType=BIT},
      </if>
    </set>
  </sql>
  <insert id="insert" parameterType="com.huilian.model.Amountchangerecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    <include refid="Base_Update_Column_List" />
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    <foreach collection="list" index="index" item="record" open="" separator="separator">
      <include refid="Base_Insert_Column_List" />
    </foreach>
  </insert>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from amountchangerecord
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.huilian.model.Example">
    delete from amountchangerecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="_parameter == null">
        where 1=2 
    </if>
  </delete>
  <delete id="deleteByTransactionid" parameterType="java.lang.Long">
    delete from amountchangerecord
    where TransactionID = #{transactionid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteById" parameterType="java.lang.Long">
    delete from amountchangerecord
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByType" parameterType="java.lang.Long">
    delete from amountchangerecord
    where Type = #{type,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByStatus" parameterType="java.lang.Long">
    delete from amountchangerecord
    where Status = #{status,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByUserid" parameterType="java.lang.Long">
    delete from amountchangerecord
    where UserID = #{userid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByProductid" parameterType="java.lang.Long">
    delete from amountchangerecord
    where ProductId = #{productid,jdbcType=VARCHAR}
  </delete>
  <update id="updateByPrimaryKey" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByExample" parameterType="map">
    <include refid="Base_Update_Column_List" />
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="_parameter == null">
        where 1=2 
    </if>
  </update>
  <update id="updateBySelective" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where ID = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateBatchBySelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="record" open="" separator="separator">
      <include refid="Base_Update_Column_List" />
      where ID = #{record.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateByTransactionid" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where TransactionID = #{transactionid,jdbcType=VARCHAR}
  </update>
  <update id="updateById" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByType" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where Type = #{type,jdbcType=VARCHAR}
  </update>
  <update id="updateByStatus" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where Status = #{status,jdbcType=VARCHAR}
  </update>
  <update id="updateByUserid" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where UserID = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByProductid" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where ProductId = #{productid,jdbcType=VARCHAR}
  </update>
  <select id="select" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from amountchangerecord
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByExample" parameterType="com.huilian.model.Example" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from amountchangerecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <include refid="Example_OrderBy_Clause" />
    <include refid="Example_Pagin_Clause" />
  </select>
  <select id="selectByTransactionid" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from amountchangerecord
    where TransactionID = #{transactionid,jdbcType=VARCHAR}
  </select>
  <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from amountchangerecord
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByType" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from amountchangerecord
    where Type = #{type,jdbcType=VARCHAR}
  </select>
  <select id="selectByStatus" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from amountchangerecord
    where Status = #{status,jdbcType=VARCHAR}
  </select>
  <select id="selectByUserid" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from amountchangerecord
    where UserID = #{userid,jdbcType=VARCHAR}
  </select>
  <select id="selectByProductid" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from amountchangerecord
    where ProductId = #{productid,jdbcType=VARCHAR}
  </select>
  <select id="countByExample" parameterType="com.huilian.model.Example" resultType="java.lang.Long">
    select count(*) from amountchangerecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="virtualDeleteByExample" parameterType="com.huilian.model.Example">
    update amountchangerecord set data_status=1 
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="_parameter == null">
        where 1=2 
    </if>
  </update>
  <update id="virtualDeleteByPrimaryKey" parameterType="java.lang.Long">
    update amountchangerecord set data_status=1 
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="virtualDeleteByTransactionid" parameterType="java.lang.Long">
    update amountchangerecord set data_status=1 
    where TransactionID = #{transactionid,jdbcType=VARCHAR}
  </update>
  <update id="virtualDeleteById" parameterType="java.lang.Long">
    update amountchangerecord set data_status=1 
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="virtualDeleteByType" parameterType="java.lang.Long">
    update amountchangerecord set data_status=1 
    where Type = #{type,jdbcType=VARCHAR}
  </update>
  <update id="virtualDeleteByStatus" parameterType="java.lang.Long">
    update amountchangerecord set data_status=1 
    where Status = #{status,jdbcType=VARCHAR}
  </update>
  <update id="virtualDeleteByUserid" parameterType="java.lang.Long">
    update amountchangerecord set data_status=1 
    where UserID = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="virtualDeleteByProductid" parameterType="java.lang.Long">
    update amountchangerecord set data_status=1 
    where ProductId = #{productid,jdbcType=VARCHAR}
  </update>
</mapper>