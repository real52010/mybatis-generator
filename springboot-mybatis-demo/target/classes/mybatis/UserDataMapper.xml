<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huilian.mapper.UserDataDAO">
  <resultMap id="BaseResultMap" type="com.huilian.model.UserData">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="id_card_flag" jdbcType="INTEGER" property="idCardFlag" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="TIMESTAMP" property="updateBy" />
    <result column="data_status" jdbcType="INTEGER" property="dataStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, nick_name, real_name, birthday, id_card, id_card_flag, address, create_time, 
    create_by, update_time, update_by, data_status
  </sql>
  <select id="selectByExample" parameterType="com.huilian.model.UserDataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.huilian.model.UserDataExample">
    delete from user_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huilian.model.UserData">
    insert into user_data (id, user_id, nick_name, 
      real_name, birthday, id_card, 
      id_card_flag, address, create_time, 
      create_by, update_time, update_by, 
      data_status)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{idCardFlag,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=TIMESTAMP}, 
      #{dataStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.huilian.model.UserData">
    insert into user_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="idCardFlag != null">
        id_card_flag,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="dataStatus != null">
        data_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="idCardFlag != null">
        #{idCardFlag,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=TIMESTAMP},
      </if>
      <if test="dataStatus != null">
        #{dataStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into user_data (id, user_id, nick_name, 
      real_name, birthday, id_card, 
      id_card_flag, address, create_time, 
      create_by, update_time, update_by, 
      data_status)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.userId,jdbcType=VARCHAR}, #{item.nickName,jdbcType=VARCHAR}, 
        #{item.realName,jdbcType=VARCHAR}, #{item.birthday,jdbcType=VARCHAR}, #{item.idCard,jdbcType=VARCHAR}, 
        #{item.idCardFlag,jdbcType=INTEGER}, #{item.address,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.createBy,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.updateBy,jdbcType=TIMESTAMP}, 
        #{item.dataStatus,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into user_data
    (id, user_id, nick_name, real_name, birthday, id_card, id_card_flag, address, create_time, 
      create_by, update_time, update_by, data_status)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          #{item.id,jdbcType=INTEGER},
        </if>
        <if test="item.id == null">
          NULL,
        </if>
        <if test="item.userId != null">
          #{item.userId,jdbcType=VARCHAR},
        </if>
        <if test="item.userId == null">
          NULL,
        </if>
        <if test="item.nickName != null">
          #{item.nickName,jdbcType=VARCHAR},
        </if>
        <if test="item.nickName == null">
          NULL,
        </if>
        <if test="item.realName != null">
          #{item.realName,jdbcType=VARCHAR},
        </if>
        <if test="item.realName == null">
          NULL,
        </if>
        <if test="item.birthday != null">
          #{item.birthday,jdbcType=VARCHAR},
        </if>
        <if test="item.birthday == null">
          NULL,
        </if>
        <if test="item.idCard != null">
          #{item.idCard,jdbcType=VARCHAR},
        </if>
        <if test="item.idCard == null">
          NULL,
        </if>
        <if test="item.idCardFlag != null">
          #{item.idCardFlag,jdbcType=INTEGER},
        </if>
        <if test="item.idCardFlag == null">
          NULL,
        </if>
        <if test="item.address != null">
          #{item.address,jdbcType=VARCHAR},
        </if>
        <if test="item.address == null">
          NULL,
        </if>
        <if test="item.createTime != null">
          #{item.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.createTime == null">
          NULL,
        </if>
        <if test="item.createBy != null">
          #{item.createBy,jdbcType=VARCHAR},
        </if>
        <if test="item.createBy == null">
          NULL,
        </if>
        <if test="item.updateTime != null">
          #{item.updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.updateTime == null">
          NULL,
        </if>
        <if test="item.updateBy != null">
          #{item.updateBy,jdbcType=TIMESTAMP},
        </if>
        <if test="item.updateBy == null">
          NULL,
        </if>
        <if test="item.dataStatus != null">
          #{item.dataStatus,jdbcType=INTEGER},
        </if>
        <if test="item.dataStatus == null">
          NULL,
        </if>
      </trim>
    </foreach>
  </insert>
  <select id="countByExample" parameterType="com.huilian.model.UserDataExample" resultType="java.lang.Long">
    select count(*) from user_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_data
    <set>
      <if test="record.id != null">
        id = #{record..id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record..userId,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record..nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record..realName,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record..birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record..idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.idCardFlag != null">
        id_card_flag = #{record..idCardFlag,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record..address,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record..createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record..createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record..updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record..updateBy,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataStatus != null">
        data_status = #{record..dataStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_data
    set id = #{record..id,jdbcType=INTEGER},
      user_id = #{record..userId,jdbcType=VARCHAR},
      nick_name = #{record..nickName,jdbcType=VARCHAR},
      real_name = #{record..realName,jdbcType=VARCHAR},
      birthday = #{record..birthday,jdbcType=VARCHAR},
      id_card = #{record..idCard,jdbcType=VARCHAR},
      id_card_flag = #{record..idCardFlag,jdbcType=INTEGER},
      address = #{record..address,jdbcType=VARCHAR},
      create_time = #{record..createTime,jdbcType=TIMESTAMP},
      create_by = #{record..createBy,jdbcType=VARCHAR},
      update_time = #{record..updateTime,jdbcType=TIMESTAMP},
      update_by = #{record..updateBy,jdbcType=TIMESTAMP},
      data_status = #{record..dataStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huilian.model.UserData">
    update user_data
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="idCardFlag != null">
        id_card_flag = #{idCardFlag,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=TIMESTAMP},
      </if>
      <if test="dataStatus != null">
        data_status = #{dataStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huilian.model.UserData">
    update user_data
    set user_id = #{userId,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      id_card_flag = #{idCardFlag,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=TIMESTAMP},
      data_status = #{dataStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>