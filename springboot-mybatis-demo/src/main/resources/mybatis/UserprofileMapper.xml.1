<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huilian.mapper.UserprofileDAO">
  <resultMap id="BaseResultMap" type="com.huilian.model.Userprofile">
    <id column="id" jdbcType="BIGINT" property="id" />
    <id column="UserID" jdbcType="VARCHAR" property="userid" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="PhoneNum" jdbcType="VARCHAR" property="phonenum" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="Password" jdbcType="VARCHAR" property="password" />
    <result column="Status" jdbcType="VARCHAR" property="status" />
    <result column="platform" jdbcType="INTEGER" property="platform" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="TIMESTAMP" property="updateBy" />
    <result column="data_status" jdbcType="VARCHAR" property="dataStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Example_OrderBy_Clause">
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </sql>
  <sql id="Example_Pagin_Clause">
    <if test="example.paginLimit != null">
      <if test="model.paginOffset != null">
        limit ${model.paginOffset}, ${model.paginLimit}
      </if>
      <if test="model.paginOffset == null">
        limit ${model.paginLimit}
      </if>
    </if>
  </sql>
  <sql id="Base_Column_List">
    id, UserID, login_name, PhoneNum, email, Password, Status, platform, create_time, 
    create_by, update_time, update_by, data_status
  </sql>
  <sql id="Base_Insert_Column_List">
    insert into userprofile
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null and record.userid != ''">
        UserID,
      </if>
      <if test="loginName != null and record.loginName != ''">
        login_name,
      </if>
      <if test="phonenum != null and record.phonenum != ''">
        PhoneNum,
      </if>
      <if test="email != null and record.email != ''">
        email,
      </if>
      <if test="password != null and record.password != ''">
        Password,
      </if>
      <if test="status != null and record.status != ''">
        Status,
      </if>
      <if test="platform != null and record.platform != ''">
        platform,
      </if>
      <if test="createTime != null and record.createTime != ''">
        create_time,
      </if>
      <if test="createBy != null and record.createBy != ''">
        create_by,
      </if>
      <if test="updateTime != null and record.updateTime != ''">
        update_time,
      </if>
      <if test="updateBy != null and record.updateBy != ''">
        update_by,
      </if>
      <if test="dataStatus != null and record.dataStatus != ''">
        data_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null and record.userid != ''">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null and record.loginName != ''">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null and record.phonenum != ''">
        #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="email != null and record.email != ''">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null and record.password != ''">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null and record.status != ''">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="platform != null and record.platform != ''">
        #{platform,jdbcType=INTEGER},
      </if>
      <if test="createTime != null and record.createTime != ''">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null and record.createBy != ''">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null and record.updateTime != ''">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null and record.updateBy != ''">
        #{updateBy,jdbcType=TIMESTAMP},
      </if>
      <if test="dataStatus != null and record.dataStatus != ''">
        #{dataStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </sql>
  <sql id="Base_Update_Column_List">
    update userprofile
    <set>
      <if test="record.userid != null and record.userid != ''">
        UserID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.loginName != null and record.loginName != ''">
        login_name = #{record.loginName,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenum != null and record.phonenum != ''">
        PhoneNum = #{record.phonenum,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null and record.email != ''">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null and record.password != ''">
        Password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null and record.status != ''">
        Status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.platform != null and record.platform != ''">
        platform = #{record.platform,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null and record.createTime != ''">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null and record.createBy != ''">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null and record.updateTime != ''">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null and record.updateBy != ''">
        update_by = #{record.updateBy,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataStatus != null and record.dataStatus != ''">
        data_status = #{record.dataStatus,jdbcType=VARCHAR},
      </if>
    </set>
  </sql>
  <insert id="insert" parameterType="com.huilian.model.Userprofile">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    <include refid="Base_Update_Column_List" />
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    <foreach collection="list" index="index" item="record" open="" separator="separator">
      <include refid="Base_Insert_Column_List" />
    </foreach>
  </insert>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from userprofile
    where id = #{id,jdbcType=BIGINT}
      and UserID = #{userid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.huilian.model.UserprofileExample">
    delete from userprofile
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="_parameter == null">
        where 1=2 
    </if>
  </delete>
  <delete id="deleteByPhonenum" parameterType="java.lang.Long">
    delete from userprofile
    where PhoneNum = #{phonenum,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByUserid" parameterType="java.lang.Long">
    delete from userprofile
    where UserID = #{userid,jdbcType=VARCHAR}
  </delete>
  <update id="updateByPrimaryKey" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where id = #{id,jdbcType=BIGINT}
      and UserID = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByExample" parameterType="map">
    <include refid="Base_Update_Column_List" />
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="_parameter == null">
        where 1=2 
    </if>
  </update>
  <update id="updateBySelective" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where id = #{record.id,jdbcType=BIGINT}
      and UserID = #{record.userid,jdbcType=VARCHAR}
  </update>
  <update id="updateBatchBySelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="record" open="" separator="separator">
      <include refid="Base_Update_Column_List" />
      where id = #{record.id,jdbcType=BIGINT}
        and UserID = #{record.userid,jdbcType=VARCHAR}
    </foreach>
  </update>
  <update id="updateByUseridAndPhonenum" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where UserID = #{userid,jdbcType=VARCHAR}
      and PhoneNum = #{phonenum,jdbcType=VARCHAR}
  </update>
  <update id="updateByPhonenum" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where PhoneNum = #{phonenum,jdbcType=VARCHAR}
  </update>
  <update id="updateByIdAndUserid" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where id = #{id,jdbcType=BIGINT}
      and UserID = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByUserid" parameterType="map">
    <include refid="Base_Update_Column_List" />
    where UserID = #{userid,jdbcType=VARCHAR}
  </update>
  <select id="select" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userprofile
    where id = #{id,jdbcType=BIGINT}
      and UserID = #{userid,jdbcType=VARCHAR}
  </select>
  <select id="selectByExample" parameterType="com.huilian.model.UserprofileExample" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userprofile
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <include refid="Example_OrderBy_Clause" />
    <include refid="Example_Pagin_Clause" />
  </select>
  <select id="selectByPhonenum" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userprofile
    where PhoneNum = #{phonenum,jdbcType=VARCHAR}
  </select>
  <select id="selectByUserid" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from userprofile
    where UserID = #{userid,jdbcType=VARCHAR}
  </select>
  <select id="countByExample" parameterType="com.huilian.model.UserprofileExample" resultType="java.lang.Long">
    select count(*) from userprofile
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
</mapper>